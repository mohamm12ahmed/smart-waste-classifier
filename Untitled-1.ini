ثانيًا: كود Streamlit النهائي:

# smart_waste_app.py

import streamlit as st
from PIL import Image
import torch
import torchvision.transforms as transforms
import numpy as np
from model import WasteClassifier  # الكلاس اللي فيه تعريف الموديل بتاعك

# تحميل الموديل
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model = WasteClassifier()
model.load_state_dict(torch.load("waste_classifier.pt", map_location=device))
model.eval()

# أسماء الفئات
classes = ["Plastic", "Glass", "Paper", "Cardboard", "Metal", "Trash"]

# تحويل الصورة
transform = transforms.Compose([
    transforms.Resize((224, 224)),  # أو حسب اللي دربت عليه
    transforms.ToTensor(),
    transforms.Normalize([0.5], [0.5])  # غيرها حسب التدريب
])

# واجهة Streamlit
st.title("نظام تصنيف القمامة الذكي")
st.subheader("ارفع صورة وسيتم تصنيفها تلقائيًا")

uploaded_file = st.file_uploader("ارفع صورة", type=["jpg", "jpeg", "png"])

if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="الصورة المرفوعة", use_column_width=True)

    if st.button("ابدأ التصنيف"):
        input_tensor = transform(image).unsqueeze(0).to(device)
        with torch.no_grad():
            outputs = model(input_tensor)
            _, predicted = torch.max(outputs, 1)
            predicted_class = classes[predicted.item()]
        
        st.success(f"العنصر المصنف: {predicted_class}")
        st.image(f"images/{predicted_class.lower()}.png", caption=f"بوابة {predicted_class}", width=200)
        